install.packages("ProjectTemplate")
library(ProjectTemplate)
library(ProjectTemplate)
library()
create.project('letters')
library(ProjectTemplate)
setwd("/Volumes/Documents/R_onAir/Belieav_RNA_Rproj/Belieav_RNA_Syn_projtemp copy")
load.project()
load.project()
setwd("/Volumes/Documents/R_onAir/Belieav_RNA_Rproj/Belieav_RNA_Syn_projtemp copy")
load.project()
load.project()
all.RPKM = cbind(cbind(Beleav.080213.AB.3.1.Highlight.highO2$RPKM,Beleav.080213.AB.3.2.lowlight.highO2$RPKM,Beleav.080213.AB.3.3.lowlight.lowO2$RPKM, Beleav.080213.AB.3.4.HighLight.low02$RPKM) # 11, 6, 9
all.RPKM = cbind(cbind(Beleav.080213.AB.3.1.Highlight.highO2$RPKM,cbind(Beleav.080213.AB.3.2.lowlight.highO2$RPKM,cbind(Beleav.080213.AB.3.3.lowlight.lowO2$RPKM, cbind(Beleav.080213.AB.3.4.HighLight.low02$RPKM)) # 11, 6, 9
all.RPKM = cbind(cbind(Beleav.080213.AB.3.1.Highlight.highO2$RPKM),cbind(Beleav.080213.AB.3.2.lowlight.highO2$RPKM),cbind(Beleav.080213.AB.3.3.lowlight.lowO2$RPKM), cbind(Beleav.080213.AB.3.4.HighLight.low02$RPKM)) # 11, 6, 9
View(all.RPKM)
colnames(all.RPKM) = c('HL_HO2', 'LL_HO2','LL_LO2','HL_LO2')
colnames(all.RPKM) = c('HL_HO2', 'LL_HO2','LL_LO2','HL_LO2')
all.RPKM = cbind(cbind(Beleav.080213.AB.3.1.Highlight.highO2$RPKM),cbind(Beleav.080213.AB.3.2.lowlight.highO2$RPKM),cbind(Beleav.080213.AB.3.3.lowlight.lowO2$RPKM), cbind(Beleav.080213.AB.3.4.HighLight.low02$RPKM)) # 11, 6, 9
View(all.RPKM)
source('/Volumes/Documents/R_onAir/Belieav_RNA_Rproj/Belieav_RNA_Syn_projtemp copy/munge/parse1.R')
rownames(all.RPKM)=Beleav.080213.AB.3.1.Highlight.highO2$X.Gene.ID
source('~/.active-rstudio-document')
View(parse1.output)
source('/Volumes/Documents/R_onAir/Belieav_RNA_Rproj/Belieav_RNA_Syn_projtemp copy/src/norm1.R')
View(norm1.output)
source('/Volumes/Documents/R_onAir/Belieav_RNA_Rproj/Belieav_RNA_Syn_projtemp copy/src/fold_change.R')
View(fold.change.working.1)
# need to annotate below for conditions (automate TODO)
FC.HLHO.div.LL_HO2 = HL_HO2/LL_HO2
FC.HLHO.div.LL_LO2 = HL_HO2/LL_LO2
FC.HLHO.div.HL_LO2 = HL_HO2/HL_LO2
FC.LLHO.div.LL_LO2 = LL_HO2/LL_LO2
FC.LLHO.div.HL_LO2 = LL_HO2/HL_LO2
FC.LLLO.div.HL_LO2 = LL_LO2/HL_LO2
FC.all.conds.output = cbind(norm1.output,cbind(FC.HLHO.div.HL_LO2, cbind(FC.HLHO.div.LL_HO2),cbind(FC.HLHO.div.LL_LO2),cbind(FC.LLHO.div.HL_LO2),cbind(FC.LLHO.div.LL_LO2),FC.LLLO.div.HL_LO2)
FC.all.conds.output = cbind(norm1.output,cbind(FC.HLHO.div.HL_LO2, cbind(FC.HLHO.div.LL_HO2),cbind(FC.HLHO.div.LL_LO2),cbind(FC.LLHO.div.HL_LO2),cbind(FC.LLHO.div.LL_LO2),FC.LLLO.div.HL_LO2))
FC.all.conds.output = cbind(norm1.output,cbind(FC.HLHO.div.HL_LO2,
cbind(FC.HLHO.div.LL_HO2),
cbind(FC.HLHO.div.LL_LO2),
cbind(FC.LLHO.div.HL_LO2),
cbind(FC.LLHO.div.LL_LO2),
FC.LLLO.div.HL_LO2))
View(FC.all.conds.output)
FC.LLLO.div.HL_LO2))
ref.annotions = read.csv('ref_files/7002_full_annotsv2 copy.txt')
View(ref.annotions)
ref.annotions = read.csv('ref_files/7002_full_annotsv2.csv')
ref.annotions = read.csv('ref_files/7002_full_annotsv2.csv')
View(ref.annotions)
ref.annotions = read.csv('ref_files/7002_full_annotsv.csv')
ref.annotions.test = read.csv('ref_files//allgenesannots_MR.csv')
ref.annotions = read.csv('ref_files/7002_full_annots.csv')
View(ref.annotions)
short_Sput_IDS = sapply(as.character(ref.annotions$Locus.tag), FUN = function(x){substr(x,nchar(x)-3, nchar(x))})
short_7002_IDS = sapply(as.character(ref.annotions$Locus.tag), FUN = function(x){substr(x,nchar(x)-3, nchar(x))})
fix(short_7002_IDS)
shortID.ref.annotations = cbind(short_7002_IDS,ref.annotions)
# prep row names from data to match ref
annotate1.working = FC.all.conds.output
# pull out part of list #that matches ref.annotation format, use underscore to find end
row.names(annotate1.working)=sapply(row.names(annotate1.working), FUN = function(x){substr(x, regexpr('_',x)+1,  nchar(x))})
# ** currently (08/1/13), the above has some gene symbols left over, need to fix orignal mapping
#grab annotations for genes in annotate1.working
picked.annots = ref.annotions[match(row.names(annotate1.working),shortID.ref.annotations$short_Sput_IDS),]
# add annotations to data
workflow.output = cbind(annotate1.working,picked.annots)
workflow.output = cbind(annotate1.working,picked.annots)
workflow.output = cbind(annotate1.working,picked.annots)
workflow.output = cbind(annotate1.working,picked.annots)
workflow.output = cbind(annotate1.working,picked.annots)
workflow.output = cbind(annotate1.working,picked.annots)
source('/Volumes/Documents/R_onAir/Belieav_RNA_Rproj/Belieav_RNA_Syn_projtemp copy/src/annotate.R')
View(annotate.output)
View(shortID.ref.annotations)
row.names(annotate1.working)=sapply(row.names(annotate1.working), FUN = function(x){substr(x, regexpr('_',x)+1,  nchar(x))})
View(annotate1.working)
View(shortID.ref.annotations)
short_7002_IDS = sapply(as.character(ref.annotions$Locus.tag), FUN = function(x){substr(x,nchar(x)-4, nchar(x))})
shortID.ref.annotations = cbind(short_7002_IDS,ref.annotions)
View(shortID.ref.annotations)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(workflow.output)
View(annotate1.working)
picked.annots = ref.annotions[match(row.names(annotate1.working),shortID.ref.annotations$short_Sput_IDS),]
View(picked.annots)
View(annotate1.working)
picked.annots = ref.annotions[match(row.names(annotate1.working),shortID.ref.annotations$short_7002_IDS),]
# add annotations to data
annotate.output = cbind(annotate1.working,picked.annots)
short_IDS = sapply(as.character(ref.annotions$Locus.tag), FUN = function(x){substr(x,nchar(x)-4, nchar(x))})
shortID.ref.annotations = cbind(short_,ref.annotions)
shortID.ref.annotations = cbind(short_IDS# prep row names from data to match ref
shortID.ref.annotations = cbind(short_IDS)# prep row names from data to match ref
annotate1.working = FC.all.conds.output
# pull out part of list #that matches ref.annotation format, use underscore to find end
picked.annots = ref.annotions[match(row.names(annotate1.working),shortID.ref.annotations$short_7002_IDS),]
annotate1.working = FC.all.conds.output
row.names(annotate1.working)=sapply(row.names(annotate1.working), FUN = function(x){substr(x, regexpr('_',x)+1,  nchar(x))})
picked.annots = ref.annotions[match(row.names(annotate1.working),shortID.ref.annotations$short_7002_IDS),]
short_IDS = sapply(as.character(ref.annotions$Locus.tag), FUN = function(x){substr(x,nchar(x)-4, nchar(x))})
# make a shortened version for each match, put in row.names
shortID.ref.annotations = cbind(short_IDS)# prep row names from data to match ref
short_IDS = sapply(as.character(ref.annotions$Locus.tag), FUN = function(x){substr(x,nchar(x)-4, nchar(x))})
# make a shortened version for each match, put in row.names
shortID.ref.annotations = cbind(short_7002_IDS,ref.annotions)
# prep row names from data to match ref
annotate1.working = FC.all.conds.output
# pull out part of list #that matches ref.annotation format, use underscore to find end
row.names(annotate1.working)=sapply(row.names(annotate1.working), FUN = function(x){substr(x, regexpr('_',x)+1,  nchar(x))})
# ** currently (08/1/13), the above has some gene symbols left over, need to fix orignal mapping
#grab annotations for genes in annotate1.working
picked.annots = ref.annotions[match(row.names(annotate1.working),shortID.ref.annotations),]
View(picked.annots)
shortID.ref.annotations = cbind(short_IDS,ref.annotions)
# prep row names from data to match ref
annotate1.working = FC.all.conds.output
View(annotate1.working)
row.names(annotate1.working)=sapply(row.names(annotate1.working), FUN = function(x){substr(x, regexpr('_',x)+1,  nchar(x))})
View(annotate1.working)
View(shortID.ref.annotations)
picked.annots = ref.annotions[match(row.names(annotate1.working),shortID.ref.annotations$short_IDS),]
View(picked.annots)
# add annotations to data
annotate.output = cbind(annotate1.working,picked.annots)
source('/Volumes/Documents/R_onAir/Belieav_RNA_Rproj/Belieav_RNA_Syn_projtemp copy/src/annotate.R')
View(annotate.output)
source('/Volumes/Documents/R_onAir/Belieav_RNA_Rproj/Belieav_RNA_Syn_projtemp copy/src/src_workflow.R')
setwd('/Volumes/Documents/R_onAir/Belieav_RNA_Rproj//Belieav_RNA_projtemp')
load.project()
source('./src/norm1.R')
source('./src/fold_change.R')
source('./src/annotate.R')
setwd('output/')
write.csv(workflow.output,paste("workflow_output",Sys.time(),'.csv'))
write.csv(annotate.output,paste("workflow_output",Sys.time(),'.csv'))
source('~/.active-rstudio-document')
source('/Volumes/Documents/R_onAir/Belieav_RNA_Rproj/Belieav_RNA_Syn_projtemp copy/src/src_workflow.R')
source('/Volumes/Documents/R_onAir/Belieav_RNA_Rproj/Belieav_RNA_Syn_projtemp copy/src/src_workflow.R')
load.project()
setwd('/Volumes/Documents/R_onAir/Belieav_RNA_Rproj//Belieav_RNA_projtemp')
load.project()
source('./src/norm1.R')
source('./src/fold_change.R')
setwd("/Volumes/Documents/R_onAir/Belieav_RNA_Rproj/Belieav_RNA_Syn_projtemp copy")
load.project()
source('./src/norm1.R')
source('./src/fold_change.R')
source('./src/annotate.R')
setwd('output/')
write.csv(annotate.output,paste("workflow_output",Sys.time(),'.csv'))
source('/Volumes/Documents/R_onAir/Belieav_RNA_Rproj/Belieav_RNA_Syn_projtemp copy/src/src_workflow.R')
